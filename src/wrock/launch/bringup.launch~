<launch>

  <!--- Run description -->
  <include file="$(find husky_description)/launch/description.launch" /> 
  <!--- Run openni -->
  <include file="$(find openni_launch)/launch/openni.launch"> 
  <!--<arg name="camera" value="openni" />-->
  </include>
  
  <!--- Run static transform for kinect -->
  <node pkg="tf" type="static_transform_publisher" name="kinect_broadcaster" args="0 -.05 0 0 0 0 base_footprint_front_bumper_part camera_link 100" />

  <!--- Run husky base -->
  <include file="$(find husky_base)/launch/base.launch">
  <arg name="port" value="/dev/serial/by-id/usb-FTDI_UC232R_FTUSXZW7-if00-port0" />
  </include>
  
<!--- Run ekf -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen">
  <rosparam command="load" file="/home/mike/catkin_ws/src/wrock/include/husky_ekf.yaml"/>
  <remap from="gps" to="navsat/enu"/>
  <remap from="imu_data" to="imu/data_compass"/>
  <remap from="odom" to="encoder"/>
</node>

  <!--- Run robot localization 
  <include file="$(find wrock)/launch/ekf_template_odom.launch" /> 
-->
  <!--- Run um6 -->
  <node pkg="um6" type="um6_driver" name="um6_driver">
    <param name="port" type="string" value="/dev/serial/by-id/usb-FTDI_TTL232R-3V3_FTG3VBFM-if00-port0"/>
    <param name="mag_updates" type="bool" value="false"/>
  </node>
  <node pkg="tf" type="static_transform_publisher" name="imu_tf"
        args="$(optenv HUSKY_IMU_TF 0 0 0 1.5705 1.5705 0) base_link imu_link 10"/>


  <!-- Pointcloud to Laser Scan
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_node">
     <remap from="cloud_in" to="/camera/depth_registered/points" />
     <param name="min_height" type="double" value=".1" />
     <param name="max_height" type="double" value="1" />
     <param name="target_frame" type="str" value="camera_depth_frame" />


  </node> -->
    <!--- Run gmapping 
  <include file="$(find wrock)/launch/gmapping.launch" />
  -->
<!-- laser scan matcher
<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
    name="laser_scan_matcher_node" output="screen">

    <param name="~fixed_frame" value = "odom"/>
    <param name="~use_imu" value = "false"/>
    <param name="~use_odom" value = "false"/>
    <param name="max_iterations" value="10"/>

  </node>
  -->

<!-- hector mapping -->
<node pkg="hector_mapping" type="hector_mapping" 
    name="hector_mapping" output="screen">



  </node>
 

<!--- Laser Scanner -->
  <arg name="host" default="192.168.0.2" />
  <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node">
    <param name="host" value="$(arg host)" />
  </node>
  <!--- Run local laser assembler -->
  <node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler">
    <param name="max_scans" type="int" value="10000" />
    <param name="fixed_frame" type="string" value="base_link" />
    <param name="tf_cache_time_secs" type="double" value="30.0" />
  </node>

  <!--- Run rviz--> 
    <node name="rviz" pkg="rviz" type="rviz" required="True" > 
  </node>

  <!--- Run Powercube node  -->
  <node name="cube_node" pkg="wrock" type="cube_node" output="screen" />

  
  <!--- Run Denso node
  <node name="denso_node" pkg="wrock" type="denso_node" output="screen" />
-->
  <!--- Run master node   -->
    <node name="master" pkg="wrock" type="master" output="screen"> 
</node>    

  <!--- Run Move Base -->
 
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find husky_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="/opt/ros/hydro/share/husky_navigation/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="/opt/ros/hydro/share/husky_navigation/config/local_costmap_params.yaml" command="load" />
    <rosparam file="/opt/ros/hydro/share/husky_navigation/config/global_costmap_params.yaml" command="load" />
    <rosparam file="/opt/ros/hydro/share/husky_navigation/config/base_local_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="husky/cmd_vel" />
  </node>
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
 
  <rosparam param="source_list">["cube_joint_states"]</rosparam>
  <param name="publish_default_positions" type="boolean" value="true" />
</node>
</launch>
